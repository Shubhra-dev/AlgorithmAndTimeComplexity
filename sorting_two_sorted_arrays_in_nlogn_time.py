# -*- coding: utf-8 -*-
"""sorting_two_sorted_arrays_in_nlogn_time.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nwpbaVtpE7FvVurMUMORMpz7PilwlJwX
"""

def mergeSort(array):
    if len(array) > 1:

        #array divide
        mid = len(array)//2
        left = array[:mid]
        right = array[mid:]

        mergeSort(left)
        mergeSort(right)

        i = j = k = 0
        while i < len(left) and j < len(right):
            if left[i] < right[j]:
                array[k] = left[i]
                i += 1
            else:
                array[k] = right[j]
                j += 1
            k += 1

        while i < len(left):
            array[k] = left[i]
            i += 1
            k += 1

        while j < len(right):
            array[k] = right[j]
            j += 1
            k += 1


array1 = []
array2 = []
n1 = int(input("Enter N1 : "))
print("Elements (Sorted Array) - ")
for i in range(0, n1):
    ele = int(input())
    array1.append(ele)

n2 = int(input("Enter N2 : "))
print("Elements (Sorted Array)- ")
for i in range(0, n2):
    ele = int(input())
    array2.append(ele)
array = array1 + array2

result = mergeSort(array)

print("Sorted array is: ")
for i in range(len(array)):
   print(array[i], end=" ")
   print()